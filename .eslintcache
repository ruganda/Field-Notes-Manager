[{"/Users/mubarakruganda/Desktop/field-notes-manager/src/reportWebVitals.js":"1","/Users/mubarakruganda/Desktop/field-notes-manager/src/components/Home.js":"2","/Users/mubarakruganda/Desktop/field-notes-manager/src/App.js":"3","/Users/mubarakruganda/Desktop/field-notes-manager/src/index.js":"4","/Users/mubarakruganda/Desktop/field-notes-manager/src/components/NavBar.js":"5","/Users/mubarakruganda/Desktop/field-notes-manager/src/components/Notes.js":"6","/Users/mubarakruganda/Desktop/field-notes-manager/src/components/Dashboard.js":"7"},{"size":362,"mtime":1606371179729,"results":"8","hashOfConfig":"9"},{"size":5141,"mtime":1606577841466,"results":"10","hashOfConfig":"9"},{"size":665,"mtime":1606576088213,"results":"11","hashOfConfig":"9"},{"size":626,"mtime":1606576130380,"results":"12","hashOfConfig":"9"},{"size":1440,"mtime":1606557487567,"results":"13","hashOfConfig":"9"},{"size":2549,"mtime":1606476687720,"results":"14","hashOfConfig":"9"},{"size":4343,"mtime":1606578410161,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"gq89j0",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"/Users/mubarakruganda/Desktop/field-notes-manager/src/reportWebVitals.js",[],"/Users/mubarakruganda/Desktop/field-notes-manager/src/components/Home.js",["33"],"import  React from 'react';\nimport {Avatar} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport image1 from '../images/image1.jpg';\nimport image2 from '../images/image2.jpg';\nimport image3 from '../images/image3.jpg';\nimport image4 from '../images/image4.jpg';\nimport axios from 'axios';\nimport {useState, useEffect} from 'react'\nimport { useHistory } from 'react-router-dom'\n\n\nconst backgroundImages = [\n  image1, image2, image3, image4\n]\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"#\">\n        Field Notes Manager\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: \"url(\" + backgroundImages[Math.floor(Math.random() * backgroundImages.length)]+ \")\",\n    \n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n    theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Home() {\n  const classes = useStyles();\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const history = useHistory()\n\n  const handleSubmit = (e)=>{\n    e.preventDefault()\n    const data={\n      email,\n      password\n    }\n    axios.post('https://us-central1-field-notes-manager.cloudfunctions.net/api/login', data)\n    .then((res)=>{\n      localStorage.setItem('token', res.data.token)\n      history.push('/dashboard')\n    })\n    .catch(error=>{\n      console.log(error, '-error')\n    })\n  }\n\n  const handleChange=(e)=>{\n    e.preventDefault()\n    if(e.target.name ==='email'){\n      setEmail(e.target.value)\n    }\n    if(e.target.name ==='password'){\n      setPassword(e.target.value)\n    }\n\n  }\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form \n          className={classes.form}\n          onSubmit={handleSubmit}\n          >\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange = {(e)=>handleChange(e)}\n              value={email}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={password}\n              onChange = {(e)=>handleChange(e)}\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={(e)=> handleSubmit(e)}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"#\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}","/Users/mubarakruganda/Desktop/field-notes-manager/src/App.js",["34","35","36","37"],"/Users/mubarakruganda/Desktop/field-notes-manager/src/index.js",[],"/Users/mubarakruganda/Desktop/field-notes-manager/src/components/NavBar.js",["38"],"/Users/mubarakruganda/Desktop/field-notes-manager/src/components/Notes.js",["39","40"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n  cardroot: {\n    width: '87%',\n    margin:10\n  },\n\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nexport default function Notes({notes}) {\n\n  const [expandedList, setExpandedList] = React.useState([])\n  const [expanded, setexpanded] = React.useState(false)\n  \n  const classes = useStyles();\n  \n  const handleExpandClick = (id) => {\n    const expandedListCopy = expandedList\n    if(expandedListCopy.includes(id)){\n      expandedListCopy.splice(expandedList.indexOf(id),1)\n\n      setExpandedList(expandedListCopy)\n    }else{\n      expandedListCopy.push(id)\n\n      setExpandedList(expandedListCopy)\n    }\n    setExpandedList(expandedListCopy)\n    setexpanded(!expanded)\n    \n  };\n  \n\n  return (\n    <Grid container component=\"main\" className={classes.parentGrid}>\n      \n      {notes.map(note=>{\n\n        const date = new Date(note.date)\n        return(\n          <Card key={note.notesId} className={classes.cardroot}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            {note.name[0]}\n          </Avatar>\n        }\n        \n        title={note.name}\n        subheader={date.toDateString()}\n      />\n\n      <CardContent>\n      <Typography paragraph>\n          {`${ expandedList.includes(note.notesId)? note.description: note.description.slice(0,100)} ${note.description.length>100? \"...\": \" \"}`}\n        </Typography>\n        {note.description.length>100 &&\n        <>\n       { ! expandedList.includes(note.notesId) &&\n         <a href=\"#\"> <p onClick={()=>handleExpandClick(note.notesId)}>show more</p></a>\n        }\n       { expandedList.includes(note.notesId) && \n         <a href=\"#\"> <p onClick={()=>handleExpandClick(note.notesId)}>show less</p></a>\n        }\n        </>\n      }\n      </CardContent>\n    </Card>\n        )\n      })\n\n      }\n    </Grid>\n  );\n}\n","/Users/mubarakruganda/Desktop/field-notes-manager/src/components/Dashboard.js",["41","42","43","44"],"import React  from 'react';\nimport {Avatar} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Notes from './Notes';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport NavBar from './NavBar';\nimport axios from 'axios'\nimport {useEffect} from 'react'\nimport { useHistory } from 'react-router-dom';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  \n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  description:{\n    marginTop: theme.spacing(1)\n  },\n  notesContainer:{\n    paddingLeft:'7%'\n  },\n  addNote:{\n    padding:'1%'\n  }\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles()\n\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\n  const [notes, setNotes] = React.useState([])\n  const [name, setName] = React.useState('')\n  const [description, setDescription] = React.useState('')\n\n\nconst handleNameChange = (e)=>{\n    e.preventDefault()\n    setName(e.target.value)\n  }\n\n  const handleDescriptionChange = (e)=>{\n    e.preventDefault();\n    setDescription(e.target.value);\n  }\n\n  const handleSubmit = async(e)=>{\n    e.preventDefault()\n    const data = {\n      name,\n      description,\n      date: selectedDate.toISOString()\n    }\n    const res = await axios.post('https://us-central1-field-notes-manager.cloudfunctions.net/api/notes', data)\n    setNotes([res.data, ...notes,])\n\n  }\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n  \n  React.useEffect(()=>{\n    const fetchData = async()=>{\n      const res = await axios.get('https://us-central1-field-notes-manager.cloudfunctions.net/api/notes')\n      setNotes(res.data)  \n    }\n    fetchData()\n  },\n  [])\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n    <NavBar/>\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item  sm={4} md={4} className={classes.addNote} >\n          <h3> Add Notes </h3>\n          <form onSubmit={(e)=>handleSubmit(e)}>\n          <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"name\"\n              label=\"Name\"\n              name=\"name\"\n              value={name}\n              autoComplete=\"name\"\n              autoFocus\n              placeholder='Enter your Name'\n              onChange={(e)=>handleNameChange(e)}\n            />\n            \n            <KeyboardDatePicker\n              disableToolbar\n              fullWidth\n              variant=\"outlined\"\n              format=\"MM/dd/yyyy\"\n              margin=\"normal\"\n              id=\"date-picker-inline\"\n              label=\"Date\"\n              value={selectedDate}\n              onChange={handleDateChange}\n              \n              KeyboardButtonProps={{\n                'aria-label': 'change date',\n              }}\n            />\n\n          <TextField\n            fullWidth\n            onChange={(e)=>handleDescriptionChange(e)}\n            label=\"Description\"\n            multiline\n            rows={4}\n            name={'description'}\n            value={description}\n            variant=\"outlined\"\n            className={classes.description}\n          />\n          \n            <Button\n              fullWidth\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Save Notes\n            </Button>\n          </form>\n      </Grid>\n      <Grid item sm={8} md={8} component={Paper} elevation={6} square className={classes.notesContainer}>\n      <Notes notes ={notes}/>\n      </Grid>\n    </Grid>\n    </MuiPickersUtilsProvider>\n  );\n}",{"ruleId":"45","severity":1,"message":"46","line":20,"column":19,"nodeType":"47","messageId":"48","endLine":20,"endColumn":28},{"ruleId":"45","severity":1,"message":"49","line":5,"column":8,"nodeType":"47","messageId":"48","endLine":5,"endColumn":14},{"ruleId":"45","severity":1,"message":"50","line":7,"column":20,"nodeType":"47","messageId":"48","endLine":7,"endColumn":26},{"ruleId":"45","severity":1,"message":"51","line":8,"column":3,"nodeType":"47","messageId":"48","endLine":8,"endColumn":9},{"ruleId":"52","severity":1,"message":"53","line":25,"column":6,"nodeType":"54","endLine":25,"endColumn":8,"suggestions":"55"},{"ruleId":"52","severity":1,"message":"56","line":33,"column":3,"nodeType":"54","endLine":33,"endColumn":15,"suggestions":"57"},{"ruleId":"58","severity":1,"message":"59","line":82,"column":10,"nodeType":"60","endLine":82,"endColumn":22},{"ruleId":"58","severity":1,"message":"59","line":85,"column":10,"nodeType":"60","endLine":85,"endColumn":22},{"ruleId":"45","severity":1,"message":"61","line":2,"column":9,"nodeType":"47","messageId":"48","endLine":2,"endColumn":15},{"ruleId":"45","severity":1,"message":"62","line":7,"column":8,"nodeType":"47","messageId":"48","endLine":7,"endColumn":11},{"ruleId":"45","severity":1,"message":"46","line":18,"column":9,"nodeType":"47","messageId":"48","endLine":18,"endColumn":18},{"ruleId":"45","severity":1,"message":"63","line":19,"column":10,"nodeType":"47","messageId":"48","endLine":19,"endColumn":20},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'NavBar' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["64"],"React Hook React.useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["65"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Avatar' is defined but never used.","'Box' is defined but never used.","'useHistory' is defined but never used.",{"desc":"66","fix":"67"},{"desc":"68","fix":"69"},"Update the dependencies array to be: [history]",{"range":"70","text":"71"},"Update the dependencies array to be: [history, isLoggedin]",{"range":"72","text":"73"},[467,469],"[history]",[857,869],"[history, isLoggedin]"]